package ${package}.${projectName}.${moduleName}.service.impl;

import lombok.extern.slf4j.Slf4j;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import ${package}.base.util.PageData;
import ${package}.${projectName}.${moduleName}.dao.${className}Dao;
import ${package}.${projectName}.${moduleName}.pojo.po.${className}Entity;
import ${package}.${projectName}.${moduleName}.pojo.dto.${className}Query;
import ${package}.${projectName}.${moduleName}.service.${className}Service;
import org.springframework.stereotype.Service;

import java.io.Serializable;

/**
 * ${comments}
 *
 * @author ${author} ${email}
 * @since ${version} ${date}
 */
@Slf4j
@Service
public class ${className}ServiceImpl extends ServiceImpl<${className}Dao, ${className}Entity> implements ${className}Service {
    @Override
    public PageData<${className}Entity> page(${className}Query query) {
        LambdaQueryWrapper<${className}Entity> wrapper = Wrappers.lambdaQuery(${className}Entity.class);
        // TODO 添加业务逻辑
        Page<${className}Entity> page = page(new Page<>(query.getPage(), query.getPageSize()), wrapper);
        return new PageData<>(page);
    }

    @Override
    public ${className}Entity getById(Serializable id) {
        // TODO 添加业务逻辑
        return super.getById(id);
    }

    @Override
    public boolean save(${className}Entity entity) {
        // TODO 添加业务逻辑
        return super.save(entity);
    }

    @Override
    public boolean updateById(${className}Entity entity) {
        // TODO 添加业务逻辑
        return super.updateById(entity);
    }

    @Override
    public boolean removeById(Serializable id) {
        // TODO 添加业务逻辑
        return super.removeById(id);
    }
}
